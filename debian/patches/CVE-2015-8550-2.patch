From 7ea11bf376aea4bf8340eb363de9777c7f93e556 Mon Sep 17 00:00:00 2001
From: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
Date: Fri, 18 Dec 2015 15:10:09 +0000
Subject: [PATCH] xenfb: avoid reading twice the same fields from the shared page

Reading twice the same field could give the guest an attack of
opportunity. In the case of event->type, gcc could compile the switch
statement into a jump table, effectively ending up reading the type
field multiple times.

This is part of XSA-155.

Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
---
 hw/display/xenfb.c |   10 ++++++----
 1 files changed, 6 insertions(+), 4 deletions(-)

Index: qemu-2.0.0+dfsg/hw/display/xenfb.c
===================================================================
--- qemu-2.0.0+dfsg.orig/hw/display/xenfb.c	2016-02-02 07:26:01.502404816 -0500
+++ qemu-2.0.0+dfsg/hw/display/xenfb.c	2016-02-02 07:26:01.498404774 -0500
@@ -775,18 +775,20 @@
 
 static void xenfb_handle_events(struct XenFB *xenfb)
 {
-    uint32_t prod, cons;
+    uint32_t prod, cons, out_cons;
     struct xenfb_page *page = xenfb->c.page;
 
     prod = page->out_prod;
-    if (prod == page->out_cons)
+    out_cons = page->out_cons;
+    if (prod == out_cons)
 	return;
     xen_rmb();		/* ensure we see ring contents up to prod */
-    for (cons = page->out_cons; cons != prod; cons++) {
+    for (cons = out_cons; cons != prod; cons++) {
 	union xenfb_out_event *event = &XENFB_OUT_RING_REF(page, cons);
+        uint8_t type = event->type;
 	int x, y, w, h;
 
-	switch (event->type) {
+	switch (type) {
 	case XENFB_TYPE_UPDATE:
 	    if (xenfb->up_count == UP_QUEUE)
 		xenfb->up_fullscreen = 1;
